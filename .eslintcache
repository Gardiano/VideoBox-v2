[{"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\index.tsx":"1","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\App.tsx":"2","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Routes.tsx":"3","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filme\\filme.tsx":"4","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Login\\login.tsx":"5","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Home\\home.tsx":"6","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\error\\error.tsx":"7","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Footer\\footer.tsx":"8","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Header\\header.tsx":"9","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\Trendings\\trending.tsx":"10","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\WatchingNow\\watching.tsx":"11","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\Rated\\rated.tsx":"12","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\Popular\\popular.tsx":"13","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\SearchBar\\search.tsx":"14","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\SearchList\\findMovie.tsx":"15"},{"size":220,"mtime":1610946381730,"results":"16","hashOfConfig":"17"},{"size":427,"mtime":1611214821273,"results":"18","hashOfConfig":"17"},{"size":822,"mtime":1612598801199,"results":"19","hashOfConfig":"17"},{"size":10766,"mtime":1612590785805,"results":"20","hashOfConfig":"17"},{"size":180,"mtime":1610947056853,"results":"21","hashOfConfig":"17"},{"size":538,"mtime":1612549820754,"results":"22","hashOfConfig":"17"},{"size":198,"mtime":1610947692668,"results":"23","hashOfConfig":"17"},{"size":578,"mtime":1611292489931,"results":"24","hashOfConfig":"17"},{"size":557,"mtime":1611291608747,"results":"25","hashOfConfig":"17"},{"size":3135,"mtime":1612449333065,"results":"26","hashOfConfig":"17"},{"size":3009,"mtime":1612449451242,"results":"27","hashOfConfig":"17"},{"size":2971,"mtime":1612449461632,"results":"28","hashOfConfig":"17"},{"size":2958,"mtime":1612449523377,"results":"29","hashOfConfig":"17"},{"size":884,"mtime":1612600567760,"results":"30","hashOfConfig":"17"},{"size":4091,"mtime":1612601855166,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"x0a3b4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\index.tsx",[],["67","68"],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\App.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Routes.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filme\\filme.tsx",["69","70"],"/* eslint-disable no-sequences */\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./filme.css\";\r\nimport './medias.css';\r\n\r\nimport load from \"../../assets/ld.gif\";\r\n\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport Moment from \"react-moment\";\r\nimport \"moment/locale/pt-br\";\r\nMoment.globalLocale = \"pt-br\";\r\n\r\ntype Params = { id?: string };\r\ntype FilmeDetailProps = RouteComponentProps<Params>;\r\n\r\ninterface Props {\r\n  movie?: {} | undefined | null\r\n  poster_path?: string\r\n  backdrop_path?: string\r\n  vote_average?: any\r\n  vote_count?: string\r\n  title?: string\r\n  name?: string\r\n  runtime?: any\r\n  release_date?: string\r\n  tagline?: string\r\n  overview?: string | any\r\n  isloading?: boolean\r\n}\r\n\r\ninterface GenresProps {\r\n  genres?: []\r\n  name?: string \r\n  genero?: string\r\n  id?: number\r\n}\r\n\r\nconst Filme: React.FC<FilmeDetailProps> = ({ match }) => {\r\n  const [trailler, setTrailler] = useState();\r\n  const [credits, setCredtis] = useState<[]>([]);\r\n  const [movie, setMovie] = useState<Props>({});\r\n  const [director, setDirector] = useState();\r\n  const [writing, setWriting] = useState();\r\n  const [genres, setGenres] = useState<GenresProps[]>([]);\r\n  const [isLoading, setisLoading] = useState<boolean>(true);\r\n\r\n  // movie\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch(\r\n        `https://api.themoviedb.org/3/movie/${match.params.id}?api_key=5f0de47789bd5535f17999cce273751e&language=pt-BR`\r\n      )\r\n        .then((r) => {\r\n          if (r.status === 200) {\r\n            return r.json();\r\n          }\r\n          if (r.status === 404 || r.status === 400) {\r\n            throw Error(r.statusText);\r\n          }\r\n        })\r\n        .then((json) => {\r\n          setMovie(json);\r\n          setGenres(json.genres);\r\n        })\r\n        .catch((error) => {\r\n          console.log(`Catch: ${error}`);\r\n        });\r\n      setisLoading(false);\r\n    }, 1000);\r\n    return () => clearTimeout();\r\n  }, [match.params.id]); \r\n\r\n  // url trailler\r\n  useEffect(() => {\r\n    let id = match.params.id;\r\n    let url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=5f0de47789bd5535f17999cce273751e&language=pt-BR`;\r\n    fetch(url)\r\n    .then((r) => {\r\n      if (r.status === 200) {\r\n        return r.json();\r\n      }\r\n      if (r.status === 404 || r.status === 400) {\r\n        throw Error(r.statusText);\r\n      }\r\n    })\r\n      .then((json) => {\r\n        json.results.map((key: any) => {\r\n          return setTrailler(key.key);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [match.params.id]);\r\n\r\n  // creditos\r\n  useEffect(() => {\r\n      let id = match.params.id;\r\n      let url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=5f0de47789bd5535f17999cce273751e&language=pt-BR`;\r\n      fetch(url)\r\n      .then((r) => {\r\n        if (r.status === 200) {\r\n          return r.json();\r\n        }\r\n        if (r.status === 404 || r.status === 400) {\r\n          throw Error(r.statusText);\r\n        }\r\n      })\r\n        .then((json) => {    \r\n          console.log(json)\r\n          console.log(json.crew)\r\n          json.crew.map((crew: any) => {         \r\n             switch( crew.job !== '' ) {\r\n\r\n              case crew.job === 'Director':\r\n                setDirector(crew.original_name);\r\n                break;\r\n\r\n              case crew.job === '':\r\n                console.log('diretor não encontrado.');\r\n                break;\r\n\r\n              case crew.known_for_department === 'Writing':\r\n                setWriting(crew.original_name);\r\n                break;\r\n\r\n              case crew.departament === 'Writing':\r\n                setWriting(crew.original_name);\r\n                break;\r\n\r\n              default:\r\n                return <p> Indisponível </p>;\r\n             }             \r\n          })\r\n          setCredtis(json.cast);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n  }, [match.params.id]);\r\n\r\n  const backgroundGenres = genres.map((genero: GenresProps) => {\r\n    switch( genero !==  '' ) {                   \r\n      case genero.name === \"Ação\" : \r\n        return <p className=\"generos-name\" style={{background:'rgb(15, 64, 197)'}}> {genero.name} </p>; \r\n          \r\n      case genero.name === \"Aventura\" :\r\n        return <p className=\"generos-name\" style={{background:'rgb(27, 146, 134)'}}> {genero.name} </p>;  \r\n          \r\n      case genero.name === \"Crime\" :\r\n        return <p className=\"generos-name\" style={{background:'rgb(15, 33, 71)'}}> {genero.name} </p>;\r\n          \r\n      case genero.name === \"Drama\" : \r\n        return <p className=\"generos-name\" style={{background:'#ce4610'}}> {genero.name} </p>;\r\n          \r\n      case genero.name === \"Thriller\" : \r\n        return <p className=\"generos-name\" style={{background:'rgb(100, 100, 100)'}}> {genero.name} </p>\r\n\r\n      case genero.name === \"Romance\" : \r\n        return <p className=\"generos-name\" style={{background:'rgb(200, 70, 70)'}}> {genero.name} </p>\r\n\r\n      case genero.name === \"Faroeste\" : \r\n        return <p className=\"generos-name\" style={{background:'#af5d00'}}> {genero.name} </p>\r\n\r\n      case genero.name === 'Comédia' :\r\n        return  <p className=\"generos-name\" style={{background:'#470f5e'}}> {genero.name} </p>\r\n\r\n      case genero.name === 'Terror' : \r\n        return  <p className=\"generos-name\" style={{background:'#000000'}}> {genero.name} </p>\r\n\r\n      case genero.name === 'Fantasia' : \r\n        return  <p className=\"generos-name\" style={{background:'#c8467c'}}> {genero.name} </p>\r\n\r\n      case genero.name === 'Família' : \r\n        return  <p className=\"generos-name\" style={{background:'#d6ad7f'}}> {genero.name} </p>\r\n\r\n      case genero.name === 'Animação' : \r\n        return  <p className=\"generos-name\" style={{background:'#978ec2'}}> {genero.name} </p>\r\n\r\n      case genero.name === 'Ficção Científica' : \r\n        return  <p className=\"generos-name\" style={{background:'whitesmoke'}}> {genero.name} </p>\r\n           \r\n        default : return <p className=\"generos-name\" style={{display:'none'}}> </p>; \r\n   }});    \r\n\r\n  return (\r\n    <section id=\"divider-svg\">   \r\n      <div>\r\n        {isLoading === true ? (\r\n          <div id=\"loadingTheme-container\">\r\n            <div id=\"loadingTheme-gif\" style={{\r\n                backgroundImage: `url(${load})`\r\n                }}>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"filme-container\">\r\n            <div\r\n              className=\"backdrop_path\"\r\n              style={{\r\n                backgroundImage: `linear-Gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)),\r\n                  url(${`https://image.tmdb.org/t/p/w500${movie?.backdrop_path}`})`,\r\n              }}\r\n            >\r\n              <div className=\"poster_path\"\r\n                style={{ backgroundImage: `url(${`https://image.tmdb.org/t/p/w500${movie?.poster_path}`})`}}>\r\n              </div>\r\n\r\n              <div className=\"titleOrName\">\r\n                <p> {movie.title || movie.name} </p>\r\n              </div>\r\n\r\n              <div className=\"release_date_container\">\r\n                <label> Lançamento: &nbsp;</label>\r\n                <div className=\"release_date\">\r\n                   <p>\r\n                      <Moment                        \r\n                        locale=\"pt-br\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        date={movie.release_date}               \r\n                      ></Moment>   \r\n                    </p>                \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"runtime_container\">\r\n                <label>Duração:&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</label>\r\n                <div className=\"run_time\">\r\n                  <p> {movie.runtime} min </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"generos\">\r\n                <p> {backgroundGenres} </p> \r\n              </div>          \r\n\r\n              <div className=\"tagline\">\r\n              <p> {movie.tagline} </p>\r\n              </div>\r\n\r\n              <div className=\"vote_count\">\r\n                <p>\r\n                  <i className=\"fas fa-heart\"></i> {movie.vote_count}\r\n                </p>\r\n              </div>\r\n            </div>\r\n           \r\n            <div className=\"infos\">            \r\n              <div id=\"youtube-container\">             \r\n                {trailler !== undefined ? (                  \r\n                  <button type=\"button\">\r\n                    <a\r\n                      href={`https://www.youtube.com/embed/${trailler}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      <i id=\"youtube\" className=\"fab fa-youtube\"></i>\r\n                    </a>\r\n                  </button>\r\n                ) : (\r\n                  <button type=\"button\" id=\"disabledYouTubeButton\">\r\n                    <i id=\"disabledYouTube\" className=\"fab fa-youtube\"></i>\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"overview\">\r\n                <h4 className=\"sinopse\"> Sinopse </h4>\r\n                {movie?.overview?.length > 0 ? (\r\n                  <p> {movie?.overview} </p>\r\n                ) : (\r\n                  <p className=\"empty-overview\"> Sinopse indisponível </p>\r\n                )}\r\n              </div>\r\n\r\n              {director !== '' ? \r\n              <div className=\"diretor\">\r\n                <label>Diretor<p>{director}</p></label>\r\n              </div>\r\n              :\r\n              <p></p>}\r\n\r\n              {writing !== '' ? \r\n              <div className=\"Writing\">\r\n                <label>História<p> {writing} </p></label>\r\n              </div>\r\n              : <p> Indisponível </p>} \r\n\r\n              <h4 className=\"elenco\"> Elenco </h4>\r\n              <div className=\"elenco-container\">\r\n                    {credits.map((credits: any) => {\r\n                      return(                      \r\n                        <div className=\"elenco-box\">\r\n                          {credits.profile_path == undefined ?                            \r\n                            <i id=\"person-undefined\" className=\"fas fa-user-slash\"> </i> \r\n                            :                            \r\n                            <img src={`${`https://image.tmdb.org/t/p/w500${credits?.profile_path}`}`} alt=\"ator\" />\r\n                          }                         \r\n                          <p> {credits.name} </p>\r\n                        </div>                        \r\n                      )\r\n                    })}\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filme; \r\n","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Login\\login.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Home\\home.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\error\\error.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Footer\\footer.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Header\\header.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\Trendings\\trending.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\WatchingNow\\watching.tsx",["71"],"import { useEffect, FunctionComponent, useState } from \"react\";\r\nimport '../../FilmesList/filmesList.css';\r\n\r\nimport load from '../../../assets/ld3.gif';\r\n\r\nimport { Link } from \"react-router-dom\";\r\ninterface Props {\r\n  trendings?: string[] | undefined | null;\r\n  poster_path?: string;\r\n  vote_average?: any;\r\n  id?: number;\r\n  title?: string;\r\n  name?: string;\r\n}\r\n\r\nconst WacthingNow: FunctionComponent<Props> = () => {\r\n  const [watching, setWacthing] = useState<Props[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [urlWatchingNow] = useState<string>(`\r\n  https://api.themoviedb.org/3/movie/now_playing?api_key=5f0de47789bd5535f17999cce273751e&language=pt-BR&page=2\r\n  `);\r\n\r\n  useEffect(() => {\r\n    loadWatching();\r\n  }, []);\r\n\r\n   function loadWatching() {\r\n     setTimeout(() => {\r\n      fetch(urlWatchingNow)\r\n        .then((r) => {\r\n          if (r.status === 200) {\r\n            return r.json();\r\n          }\r\n          if (r.status === 404 || r.status === 400) {\r\n            throw Error(r.statusText);\r\n          }\r\n        })\r\n        .then((json) => {\r\n          setWacthing(json.results);\r\n        })\r\n        .catch((error) => {\r\n          console.log(`Catch: ${error}`);\r\n        });\r\n      setLoading(false);\r\n    }, 1000);\r\n    return () => clearTimeout();\r\n  }\r\n\r\n  return (\r\n    <section className=\"list-container\">\r\n      <h1 className=\"titles\"> Para Assistir Agora </h1>\r\n      {loading === true ? (\r\n        <img id=\"loadingTheme\" src={load} alt=\"load\" />\r\n      ) : (\r\n        <div className=\"list-card\">\r\n          {watching.map((item) => {\r\n            return (\r\n              <Link\r\n                id=\"main-link\"\r\n                to={`Filme/${item?.id}`}\r\n                style={\r\n                  item?.poster_path == null\r\n                    ? {\r\n                        backgroundPosition: \"center\",\r\n                        backgroundSize: \"contain\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                      }\r\n                    : {\r\n                        backgroundImage: `url(${`https://image.tmdb.org/t/p/w500${item?.poster_path}`})`,\r\n                      }\r\n                }\r\n              >\r\n                <div className=\"width-cards\"></div>\r\n                  <div\r\n                    className=\"circlet\"\r\n                    style={\r\n                      item.vote_average < 6\r\n                        ? { border: \"3px solid gold\" }\r\n                        : { border: \"3px solid green\" }\r\n                    }\r\n                  >\r\n                    {item?.vote_average}\r\n                  </div>\r\n\r\n                                  \r\n                   <div className=\"titulo-box\">\r\n                    <p className=\"titulo\" key={item?.id}>\r\n                      {item?.title || item?.name}\r\n                    </p>\r\n                  </div>                \r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WacthingNow;\r\n","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\Rated\\rated.tsx",["72"],"import { useEffect, FunctionComponent, useState } from \"react\";\r\nimport '../../FilmesList/filmesList.css';\r\n\r\nimport load from '../../../assets/ld3.gif';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  trendings?: string[] | undefined | null;\r\n  poster_path?: string;\r\n  vote_average?: any;\r\n  id?: number;\r\n  title?: string;\r\n  name?: string;\r\n}\r\n\r\nconst Rated: FunctionComponent<Props> = () => {\r\n  const [rated, setRated] = useState<Props[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [urlMostRated] = useState<string>(`\r\n  https://api.themoviedb.org/3/movie/top_rated?api_key=5f0de47789bd5535f17999cce273751e&language=pt-BR&page=2\r\n  `);\r\n\r\n  useEffect(() => {\r\n    loadRated();\r\n  }, []);\r\n\r\n  function loadRated() {\r\n     setTimeout(() => {\r\n      fetch(urlMostRated)\r\n        .then((r) => {\r\n          if (r.status === 200) {\r\n            return r.json();\r\n          }\r\n          if (r.status === 404 || r.status === 400) {\r\n            throw Error(r.statusText);\r\n          }\r\n        })\r\n        .then((json) => {\r\n          setRated(json.results);\r\n        })\r\n        .catch((error) => {\r\n          console.log(`Catch: ${error}`);\r\n        });\r\n      setLoading(false);\r\n    }, 1000);\r\n    return () => clearTimeout();\r\n  }\r\n\r\n  return (\r\n    <section className=\"list-container\">\r\n      <h1 className=\"titles\"> Bem Avaliados </h1>\r\n      {loading === true ? (\r\n        <img id=\"loadingTheme\" src={load} alt=\"load\" />\r\n      ) : (\r\n        <div className=\"list-card\">\r\n          {rated.map((item) => {\r\n            return (\r\n              <Link\r\n                id=\"main-link\"\r\n                to={`Filme/${item?.id}`}\r\n                style={\r\n                  item?.poster_path == null\r\n                    ? {\r\n                        backgroundPosition: \"center\",\r\n                        backgroundSize: \"contain\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                      }\r\n                    : {\r\n                        backgroundImage: `url(${`https://image.tmdb.org/t/p/w500${item?.poster_path}`})`\r\n                      }\r\n                }\r\n              >\r\n                \r\n                  <div\r\n                    className=\"circlet\"\r\n                    style={\r\n                      item.vote_average < 6\r\n                        ? { border: \"3px solid gold\" }\r\n                        : { border: \"3px solid green\" }\r\n                    }\r\n                  >\r\n                    {item?.vote_average}\r\n                  </div>\r\n\r\n                  <div className=\"width-cards\"></div>                  \r\n                   <div className=\"titulo-box\">\r\n                    <p className=\"titulo\" key={item?.id}>\r\n                      {item?.title || item?.name}\r\n                    </p>\r\n                  </div>\r\n                \r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Rated;\r\n","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\Filmes\\Popular\\popular.tsx",["73"],"import { useEffect, FunctionComponent, useState } from \"react\";\r\nimport '../../FilmesList/filmesList.css';\r\n\r\nimport load from '../../../assets/ld3.gif';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  trendings?: string[] | undefined | null;\r\n  poster_path?: string;\r\n  vote_average?: any;\r\n  id?: number;\r\n  title?: string;\r\n  name?: string;\r\n}\r\n\r\nconst Popular: FunctionComponent<Props> = () => {\r\n  const [popular, setPopular] = useState<Props[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [urlPopular] = useState<string>(`\r\n  https://api.themoviedb.org/3/movie/popular?api_key=5f0de47789bd5535f17999cce273751e&language=pt-BR&page=2\r\n  `);\r\n\r\n  useEffect(() => {\r\n    loadPopular();\r\n  }, []);\r\n\r\n   function loadPopular() {\r\n     setTimeout(() => {\r\n      fetch(urlPopular)\r\n        .then((r) => {\r\n          if (r.status === 200) {\r\n            return r.json();\r\n          }\r\n          if (r.status === 404 || r.status === 400) {\r\n            throw Error(r.statusText);\r\n          }\r\n        })\r\n        .then((json) => {\r\n          setPopular(json.results);\r\n        })\r\n        .catch((error) => {\r\n          console.log(`Catch: ${error}`);\r\n        });\r\n      setLoading(false);\r\n    }, 1000);\r\n    return () => clearTimeout();\r\n  }\r\n\r\n  return (\r\n    <section className=\"list-container\">\r\n      <h1 className=\"titles\"> Popular </h1>\r\n      {loading === true ? (\r\n        <img id=\"loadingTheme\" src={load} alt=\"load\" />\r\n      ) : (\r\n        <div className=\"list-card\">\r\n          {popular.map((item) => {\r\n            return (\r\n              <Link\r\n                id=\"main-link\"\r\n                to={`Filme/${item?.id}`}\r\n                style={\r\n                  item?.poster_path == null\r\n                    ? {\r\n                        backgroundPosition: \"center\",\r\n                        backgroundSize: \"contain\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                      }\r\n                    : {\r\n                        backgroundImage: `url(${`https://image.tmdb.org/t/p/w500${item?.poster_path}`})`\r\n                      }\r\n                }\r\n              >\r\n                \r\n                  <div\r\n                    className=\"circlet\"\r\n                    style={\r\n                      item.vote_average < 6\r\n                        ? { border: \"3px solid gold\" }\r\n                        : { border: \"3px solid green\" }\r\n                    }\r\n                  >\r\n                    {item?.vote_average}\r\n                  </div>\r\n\r\n                  <div className=\"width-cards\"></div>                  \r\n                   <div className=\"titulo-box\">\r\n                    <p className=\"titulo\" key={item?.id}>\r\n                      {item?.title || item?.name}\r\n                    </p>\r\n                  </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\SearchBar\\search.tsx",[],"C:\\Users\\Joao Paulo\\Desktop\\HookBox\\hookbox\\src\\Components\\SearchList\\findMovie.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":114,"column":37,"nodeType":"80","messageId":"81","endLine":114,"endColumn":39},{"ruleId":"82","severity":1,"message":"83","line":296,"column":49,"nodeType":"84","messageId":"85","endLine":296,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":25,"column":6,"nodeType":"88","endLine":25,"endColumn":8,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":26,"column":6,"nodeType":"88","endLine":26,"endColumn":8,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"92","line":26,"column":6,"nodeType":"88","endLine":26,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadWatching'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'loadRated'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'loadPopular'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [loadWatching]",{"range":"105","text":"106"},"Update the dependencies array to be: [loadRated]",{"range":"107","text":"108"},"Update the dependencies array to be: [loadPopular]",{"range":"109","text":"110"},[755,757],"[loadWatching]",[738,740],"[loadRated]",[742,744],"[loadPopular]"]